import{A as h}from"./constants-rqNHC8Ty.js";import{h as c}from"./headers-B8g_0KXq.js";async function m(o){const n=`${h}/${o}?_author=true&_comments=true&_reactions=true`,t={method:"GET",headers:c()};try{const r=await fetch(n,t);if(!r.ok){const a=await r.json();throw new Error(a.message||"Failed to fetch the post")}return(await r.json()).data}catch(r){throw console.error("Error fetching the post:",r),r}}async function u(o=12,n=1,t=null){const r=new URL(h);r.searchParams.append("limit",o),r.searchParams.append("page",n),t&&r.searchParams.append("_tag",t),r.searchParams.append("_author","true"),r.searchParams.append("_reactions","true");const e={method:"GET",headers:c()};try{const a=await fetch(r,e);if(!a.ok){const s=await a.json();throw new Error(s.message||"Failed to fetch posts")}return await a.json()}catch(a){throw console.error("Error fetching posts:",a),a}}async function f(o,n=12,t=1,r){const e=new URL(`https://v2.api.noroff.dev/social/profiles/${o}/posts`);e.searchParams.append("limit",n),e.searchParams.append("page",t),r&&e.searchParams.append("_tag",r),e.searchParams.append("_author","true"),e.searchParams.append("_reactions","true");const a={method:"GET",headers:c()};try{const s=await fetch(e,a);if(!s.ok){const p=await s.json();throw new Error(p.message||"Failed to fetch user posts")}return await s.json()}catch(s){throw console.error("Error fetching user posts:",s),s}}export{m as a,f as b,u as r};
